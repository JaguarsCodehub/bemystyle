{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jyotindra\\\\Desktop\\\\bemystyle\\\\fashion\\\\src\\\\components\\\\ShadesPage\\\\Shades.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { Button } from '../Button/ButtonElements';\nimport { gsap, TimelineLite, Power3 } from 'gsap';\nimport { InfoContainer, InfoWrapper, InfoRow, Column1, Column2, TextWrapper, TopLine, Heading, Subtitle, BtnWrap, ImgWrap, Img } from \"./ShadesElements\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Shades = ({\n  lightBg,\n  id,\n  imgStart,\n  topLine,\n  lightText,\n  headline,\n  darkText,\n  description,\n  buttonLabel,\n  img,\n  alt,\n  primary,\n  dark,\n  dark2\n}) => {\n  _s();\n\n  let line1 = useRef(null);\n  let line2 = useRef(null);\n  let line3 = useRef(null);\n  useEffect(() => {\n    const staggerText = (node1, node2, node3) => {\n      line1.from('info-container', {\n        duration: 0.8,\n        y: 100,\n        delay: .1,\n        ease: 'power3.inOut',\n        stagger: {\n          amount: 0.1\n        }\n      });\n    };\n\n    staggerText(line1, line2, line3);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(InfoContainer, {\n      className: \"info-container\",\n      lightBg: lightBg,\n      id: id,\n      children: /*#__PURE__*/_jsxDEV(InfoWrapper, {\n        children: /*#__PURE__*/_jsxDEV(InfoRow, {\n          imgStart: imgStart,\n          children: [/*#__PURE__*/_jsxDEV(Column1, {\n            children: /*#__PURE__*/_jsxDEV(TextWrapper, {\n              children: [/*#__PURE__*/_jsxDEV(TopLine, {\n                ref: el => line1 = el,\n                children: topLine\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Heading, {\n                ref: el => line2 = el,\n                lightText: lightText,\n                children: headline\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n                ref: el => line3 = el,\n                darkText: darkText,\n                children: description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(BtnWrap, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  to: \"/signin\",\n                  smooth: true,\n                  duration: 500,\n                  spy: true,\n                  exact: \"true\",\n                  offset: -80,\n                  primary: primary ? 1 : 0,\n                  dark: dark ? 1 : 0,\n                  dark2: dark2 ? 1 : 0,\n                  color: dark,\n                  children: buttonLabel\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Column2, {\n            children: /*#__PURE__*/_jsxDEV(ImgWrap, {\n              children: /*#__PURE__*/_jsxDEV(Img, {\n                src: img,\n                alt: alt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 10\n    }, this)\n  }, void 0, false);\n};\n\n_s(Shades, \"Xq8OLpPsbmjq2wFGVKfEcXNtWRo=\");\n\n_c = Shades;\nexport default Shades;\n\nvar _c;\n\n$RefreshReg$(_c, \"Shades\");","map":{"version":3,"sources":["C:/Users/Jyotindra/Desktop/bemystyle/fashion/src/components/ShadesPage/Shades.js"],"names":["React","useEffect","useRef","Button","gsap","TimelineLite","Power3","InfoContainer","InfoWrapper","InfoRow","Column1","Column2","TextWrapper","TopLine","Heading","Subtitle","BtnWrap","ImgWrap","Img","Shades","lightBg","id","imgStart","topLine","lightText","headline","darkText","description","buttonLabel","img","alt","primary","dark","dark2","line1","line2","line3","staggerText","node1","node2","node3","from","duration","y","delay","ease","stagger","amount","el"],"mappings":"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","sourcesContent":["import React,{useEffect,useRef} from 'react';\r\nimport { Button } from '../Button/ButtonElements';\r\nimport { gsap,TimelineLite, Power3} from 'gsap'\r\n\r\nimport { InfoContainer,\r\n         InfoWrapper,\r\n         InfoRow,\r\n         Column1,\r\n         Column2,\r\n         TextWrapper,\r\n         TopLine,\r\n         Heading,\r\n         Subtitle,\r\n         BtnWrap,\r\n         ImgWrap,\r\n         Img,\r\n          } from \"./ShadesElements\";\r\n\r\nconst Shades = ({lightBg,\r\n                      id,\r\n                      imgStart,\r\n                      topLine,\r\n                      lightText,\r\n                      headline,\r\n                      darkText,\r\n                      description,\r\n                      buttonLabel,\r\n                      img,\r\n                      alt,\r\n                      primary,\r\n                      dark,\r\n                      dark2}) => {\r\n\r\n    let line1 = useRef(null);\r\n    let line2 = useRef(null);\r\n    let line3 = useRef(null);\r\n\r\n    useEffect(() => {\r\n        \r\n\r\n        \r\n\r\n        const staggerText = (node1, node2, node3) => {\r\n            line1.from('info-container', {\r\n              duration: 0.8,\r\n              y: 100,\r\n              delay: .1,\r\n              ease: 'power3.inOut',\r\n              stagger: {\r\n                amount: 0.1\r\n              }\r\n        \r\n        \r\n            })\r\n          }\r\n\r\n          staggerText(line1,line2,line3);\r\n        \r\n    }, [])\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n         <InfoContainer  className='info-container' lightBg={lightBg} id={id}>\r\n             <InfoWrapper>\r\n                 <InfoRow imgStart={imgStart}>\r\n                    <Column1>\r\n                    <TextWrapper>\r\n                        <TopLine ref={el => (line1 = el)}>{topLine}</TopLine>\r\n                        <Heading ref={el => (line2 = el)} lightText={lightText}>{headline}</Heading>\r\n                        <Subtitle ref={el => (line3 = el)} darkText={darkText}>{description}</Subtitle>\r\n                        <BtnWrap>\r\n                            <Button \r\n                             to='/signin'\r\n                             smooth={true}\r\n                             duration={500}\r\n                             spy={true}\r\n                             exact=\"true\"\r\n                             offset={-80}\r\n                             primary={primary ? 1 : 0}\r\n                             dark={dark ? 1 : 0}\r\n                             dark2={dark2 ? 1 : 0}\r\n                             color={dark}\r\n                            \r\n                            \r\n                            \r\n                            >{buttonLabel}</Button>\r\n                        </BtnWrap>\r\n                    </TextWrapper>\r\n                    </Column1>\r\n                    <Column2>\r\n                      <ImgWrap>\r\n                        <Img src={img} alt={alt}/>\r\n                      </ImgWrap>\r\n                    </Column2>\r\n                 </InfoRow>\r\n             </InfoWrapper>\r\n         </InfoContainer>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Shades;\r\n"]},"metadata":{},"sourceType":"module"}